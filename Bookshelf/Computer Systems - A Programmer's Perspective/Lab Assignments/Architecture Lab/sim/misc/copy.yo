                            | # Execution begins at address 0
0x000:                      |         .pos 0
0x000: 30f40002000000000000 |         irmovq stack, %rsp
0x00a: 804800000000000000   |         call main
0x013: 00                   |         halt
                            | 
0x018:                      | .align 8
                            | # Source block
0x018:                      | src:
0x018: 0a00000000000000     |         .quad 0x00a
0x020: b000000000000000     |         .quad 0x0b0
0x028: 000c000000000000     |         .quad 0xc00
                            | # Destination block
0x030:                      | dest:
0x030: 1101000000000000     |         .quad 0x111
0x038: 2202000000000000     |         .quad 0x222
0x040: 3303000000000000     |         .quad 0x333
                            | 
0x048: 30f71800000000000000 | main:   irmovq src,%rdi
0x052: 30f63000000000000000 |         irmovq dest,%rsi
0x05c: 30f20300000000000000 |         irmovq $3,%rdx
0x066: 807000000000000000   |         call copy       # copy_block(src, dest, 3)
0x06f: 00                   |         halt
                            | 
                            | # long copy_block(long *src, long *dest, long len)
                            | # start in %rdi and %rsi, count in %rdx
0x070:                      | copy:
0x070: 6300                 |         xorq %rax,%rax          # result = 0
0x072: 6222                 |         andq %rdx,%rdx          # Set conition codes
0x074: 70b100000000000000   |         jmp test
0x07d:                      | loop:
0x07d: 50870000000000000000 |         mrmovq (%rdi),%r8       # val = *src
0x087: c0f70800000000000000 |         iaddq $8,%rdi           # src++
0x091: 40860000000000000000 |         rmmovq %r8,(%rsi)       # *dest = val
0x09b: c0f60800000000000000 |         iaddq $8,%rsi           # dest++
0x0a5: 6380                 |         xorq %r8,%rax           # result ^= val
0x0a7: c0f2ffffffffffffffff |         iaddq $-1,%rdx          # len--
0x0b1:                      | test:
0x0b1: 747d00000000000000   |         jne loop
0x0ba: 90                   |         ret
                            | 
                            | # Stak starts here and grows to lower addresses
0x200:                      |        .pos 0x200
0x200:                      | stack:
