# Execution begins at address 0
        .pos 0
        irmovq stack, %rsp
        call main
        halt

.align 8
# Source block
src:
        .quad 0x00a
        .quad 0x0b0
        .quad 0xc00
# Destination block
dest:
        .quad 0x111
        .quad 0x222
        .quad 0x333

main:   irmovq src,%rdi
        irmovq dest,%rsi
        irmovq $3,%rdx
        call copy       # copy_block(src, dest, 3)
        halt

# long copy_block(long *src, long *dest, long len)
# start in %rdi and %rsi, count in %rdx
copy:
        xorq %rax,%rax          # result = 0
        andq %rdx,%rdx          # Set conition codes
        jmp test
loop:
        mrmovq (%rdi),%r8       # val = *src
        iaddq $8,%rdi           # src++
        rmmovq %r8,(%rsi)       # *dest = val
        iaddq $8,%rsi           # dest++
        xorq %r8,%rax           # result ^= val
        iaddq $-1,%rdx          # len--
test:
        jne loop
        ret

# Stak starts here and grows to lower addresses
       .pos 0x200
stack:
