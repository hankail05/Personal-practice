#lang sicp
(define (factorial n)
  (define (iter product counter)
    (if (> counter n)
        product
        (iter (* counter product) (+ counter 1))))
  (iter 1 1))

; data-path

;         / \                    / \ 
;        / 1 \                  / 1 \
;       /_____\                /_____\
;          |                      |
;         (X)1->p                (X)1->c
;          V                      V                 ___
;     +---------+             +---------+          /   \
;     | product |             | counter |-------->|  >  |
;     +--------++             ++-+------+          \___/
;       ^      |               | |    ^              ^
;       |      |               | |    |              |
;      (X)*->p +-----+     +---+ |   (X)+->c         |
;       |            |     |     |    |            +---+
;       |          .---------.   |    |            | n |
;       |          \    *    /   |    +-----+      +---+
;       |           \_______/    |          |
;       |              |         |          |
;       |              |   +--+  |          |
;       |              |   |  |  |          |
;       |              |   | .-----.        |
;       +--------------+   | \  +  /        |
;                +---------+  \___/         |
;                |              |           |
;               / \             +-----------+
;              / 1 \
;             /_____\


; controller diagram

;         start
;           |
;           V
;        +-----+
;        |1-->p|
;        +-----+
;           |
;        +-----+
;        |1-->c|
;        +-----+
;           |
;          / \
;  +----> < = >---> done
;  |       \./
;  |        |
;  |     +-----+
;  |     |*-->p|
;  |     +-----+
;  |        |
;  |     +-----+
;  |     |+-->c|
;  |     +-----+
;  |        |
;  +--------+