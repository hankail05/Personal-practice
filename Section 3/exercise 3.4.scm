#lang sicp
(define (make-account balance password)
  (let ((wrong-attempt 0))
    (define (withdraw amount)
      (if (>= balance amount)
          (begin (set! balance (- balance amount)) balance)
          "Insufficient funds"))
    (define (deposit amount)
      (set! balance (+ balance amount)) balance)
    (define (call-the-cops)
      "FBI OPEN UP! Put your hands to the wall!") ; LUL
    (define (dispatch m)
      (cond ((eq? m 'withdraw) withdraw)
            ((eq? m 'deposit) deposit)
            (else (error "Unknown request --MAKE-ACCOUNT" m))))
    (define (password-check password-input m)
      (if (eq? password-input password)
          (begin (set! wrong-attempt 0) (dispatch m))
          (lambda (x) (begin (set! wrong-attempt (inc wrong-attempt))
                             (if (> wrong-attempt 7) (call-the-cops) "Incorrect password")))))
  password-check))

(define acc (make-account 100 'secret-password))

((acc 'secret-password 'withdraw) 40)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)
((acc 'some-other-password 'deposit) 50)